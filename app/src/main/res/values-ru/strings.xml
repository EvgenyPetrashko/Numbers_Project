<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">Числа</string>
    <string name="enter_number_title">Введите число:</string>
    <string name="start_button">Начать</string>
    <string name="nav_draw_close">Закрыть</string>
    <string name="nav_draw_open">Открыть</string>
    <string name="app_header">Числа и их свойства</string>
    <string name="nav_number_info">Информация о числе</string>
    <string name="nav_gym">Проверь себя</string>
    <string name="nav_lottery">Лотерея</string>
    <string name="nav_properties">Свойства</string>
    <string name="nav_algorithms">Алгоритмы</string>
    <string name="nav_full_version">Полная версия</string>

    <!--Info_Prop_List_Fragment-->
    <string name="number_title">Число: </string>
    <string name="number_parity">Четность: </string>
    <string name="binary_title">Двоичная: </string>
    <string name="octal_title">Восьмиричная: </string>
    <string name="hexadecimal_title">Шестнадцатиричная: </string>
    <string name="perfect_square_title">Полный квадрат: </string>
    <string name="square_root_title">Квадратный корень: </string>
    <string name="fibonacci_title">Число Фибоначчи: </string>
    <string name="left_fibonacci_title">Левое число Фибоначчи: </string>
    <string name="right_fibonacci_title">Правое число Фибоначчи: </string>
    <string name="prime_title">Простое число: </string>
    <string name="semi_prime_number">Полу-простое число: </string>
    <string name="semi_yes_result">Правда </string>
    <string name="semi_no_result">Нет</string>
    <string name="rgb_title">RGB: </string>
    <!--<string name="pro_number_types">Is Deficient/Abundant/Perfect number:</string>
    <string name="pro_deficient_type">Deficient</string>
    <string name="pro_abundant_type">Abundant</string>
    <string name="pro_perfect_type">Perfect</string>-->
    <!--Loading dialog-->
    <string name="load_title">Загрузка</string>
    <string name="load_message">Пожалуйста подождите…</string>
    <!--Components dialog-->
    <string name="components_title">Все простые делители:</string>
    <!--SemiFactor dialog-->
    <string name="semi_factors">Делители:</string>
    <string name="first_semi_factor">Первое: </string>
    <string name="second_semi_factor">Второе: </string>

    <!--Properties fragment-->
    <string-array name="prop_paragraphs">
        <item>Признаки делимости</item>
        <!-- <item>Square of a number ending in 5</item>-->
        <item>Последовательности</item>
        <item>Системы счислений</item>
        <item>Виды чисел</item>
        <item>Тригонометрия</item>
        <item>Логарифмы</item>
        <item>Степени</item>
        <item>Производные</item>
        <item>Интегралы</item>
        <item>Вероятность</item>
    </string-array>

    <!--Algorithms fragment-->
    <string-array name="algo_paragraphs_title">
        <item>Наибольший общий делитель</item>
        <item>Проверка числа на простоту</item>
        <item>Решето Эратосфена</item>
        <item>Возведение в степень</item>
        <item>Нахождение чисел Фибоначчи</item>
        <item>RGB</item>
    </string-array>

    <string-array name="algo_paragraphs_desc">
        <item>Все способы</item>
        <item>Все способы</item>
        <item>Нахождение всех простых чисел на промежутке от 2 до n</item>
        <item>Быстрое</item>
        <item>Простейшие методы</item>
        <item>Получение цвета из числа</item>
    </string-array>

    <!--AlgoItems-->
    <string name="gcd_text1"><![CDATA[

<b>Наибольшим общим делителем</b>  для двух целых чисел a и b называется наибольшее натуральное d, такое что a делится на d и b делится на d.<br><br>

Наибольший общий делитель существует и однозначно определён, если хотя бы одно из чисел m или n не ноль.<br><br>

<b>Наивный алгоритм поиска НОД:</b><br>
В наивном методе, мы считаем, что нам известны разложения чисел a и b на простые множители. Нам просто нужно сделать пересечение из двух списков делителей.<br>Сложность равна минимальной из длин списков.<br><br>
<b>Алгоритм Вычитаний:</b><br>
Его можно сформулировать следующим образом:<br>
Если даны два натуральных числа a и b, то пока a не равно b нужно вычитать меньшее из большего. Далее мы имеем 2 исхода:<br>
1) В процессе вычитаний одно из наших чисел стало единицей, а другое нет - значит, что НОД = 1.<br>
2) В процессе вычитаний одно число стало равно другому - это число и есть НОД наших чисел<br>
Сложность: O(n)<br><br>
<b>Алгоритм Евклида:</b><br>
Можно сформулировать следующим образом:<br>
Если даны два натуральных числа a и b, то пока a не равно b или одно из чисел не равно единицы нужно продолжать деление с остатком, т.е. берем остаток от деления(mod) большего числа на меньшее и записываем в большее. Как и в прошлом алгоритме, если одно из чисел стало равным единице, то это и есть НОД.<br>
Сложность: O(log(min(a,b)))



    ]]></string>
    <string name="prime_algo_text1"><![CDATA[
<b>Первый способ:</b><br>
Чтобы проверить число n на простоту нужно пройтись по всем числам от 2 до n-1. Если оно делится хоть на одно из них, то оно не простое.<br>
Асимптотика: O(n).<br><br>
<b>Второй способ:</b><br>
Чтобы проверить число n на простоту нужно пройтись по всем числам от 2 до квадратного корня из под n.<br>
Асимптотика: O(sqrt(n)).

    ]]></string>
    <string name="sieve_algo_text1"><![CDATA[
Данный алгоритм находит все простые числа от 2 до n.<br>
1) Выписываем все числа от 2 до n<br>
2) Берем первое число(по порядку), пусть оно будет p, и вычеркиваем все остальные числа начиная с 2p, которые делятся на p.<br>
3) После того, как мы сделали это, находим первое не вычеркнутое число больше p и повторяем шаг 2.<br>
4) Повторяем пока p не станет больше n<br>
5) Все оставшиеся числа - простые<br><br>
Данный алгоритм можно улучшить путем того, что на шаге 3 можно начать вычеркивать не с 2p, а с p^2. Соответственно, алгоритм можно останавливать,когда p^2 станет больше n.

    ]]></string>
    <string name="fast_exp_text1"><![CDATA[
<b>Алгоритм быстрого возведения в степень</b> — алгоритм, предназначенный для возведения числа x в натуральную степень n за меньшее число умножений, чем это требуется в определении.<br>
Псевдокод:<br><br>
int Power(int value, int pow)<br>
int result = 1;<br>
  while (pow > 0){<br>
    if pow mod 2 == 1{ result *= value; }<br>
    value *= value;<br>
    pow /= 2;}<br>
  return result;<br>
    ]]></string>
    <string name="fib_main_text1"><![CDATA[
Простейшими алгоритмами нахождения числа фибоначчи под номером n являются:<br>
<b> 1) Рекурсивное решение</b><br>
Псевдокод:<br>
int fib(int n){<br>
if (n&lt;2) return n;<br>
else return fib(n-1) + fib(n-2);<br>
}<br>
Данный метод очень простой, но требует (fi)^n времени, где fi - <i>золотое сечение.</i><br><br>
<b>2) Динамическое решение:</b><br>
Псевдокод:<br>
int fib(int n){<br>
if (n&lt;=2) return 1;<br>
int[] array = new int[n+1];<br>
array[1] = 1;<br>
array[2] = 1;<br>
for (int i =3; i&lt;=n; i++){<br>
array[i] = array[i-1] + array[i-2];<br>
}<br>
return array[n];<br>
}<br>
Данный метод сложнее предыдущего, но требует уже O(n) времени и O(n) памяти.<br><br>
<b>3) Элегантное решение:</b><br>
Псевдокод:<br>
int fib(int n){<br>
	int x = 1;<br>
	int y = 0;<br>
	for (int i = 0; i &lt; n; i++)<br>
	{<br>
		x += y;<br>
		y = x - y;<br>
	}<br>
	return y;<br>
}<br>
Данное решение требует O(n) времени, но уже O(1) памяти.

    ]]></string>
    <string name="rgb_text1"><![CDATA[
<b>RGB</b> - цветовая модель кодировки цветов, где основными цветами являются красный, зеленый и голубой соответственно.<br><br>
Для получения RGB нужно перевести искомое число в шестнадцатеричную систему счисления<i>(нужно помнить, что RGB может закодировать только 2^24 цветов и если искомое число больше этого, то нужно найти остаток от деления данного числа на 2^24 и уже использовать результат).</i><br><br>
После перевода числа в шестнадцатеричную систему счисления - нужно поставить нули перед числом, если в числе меньше 6 знаков. Осталось поставить перед числом решётку. <br><br>
Допустим мы получили число #3221A1, тогда 32 - отвечает за красный, 21 - за зелёный, а A1 - за голубой.

    ]]></string>

    <!--Properties Fragment Item Info-->
    <string name="div_crit_text">
        <![CDATA[<b>Число делится на 2</b> тогда и только тогда, когда его последняя цифра делится на 2, то есть является чётной. <i>(148 четное, т.к. 8 - четное)</i><br><br>
        <b>Число делится на 3</b> тогда и только тогда, когда сумма его цифр делится на 3.<i>(627 делится на 3, т.к. 6+2+7=15, а 15 делится на 3)</i> <br><br>
<b>Число делится на 4</b> тогда и только тогда, когда две его последние цифры составляют число, которое делится на 4.<i>(1068 - делится на 4, т.к. 68 делится)</i>\n  Двузначное число делится на 4 тогда и только тогда, когда удвоенная цифра в разряде десятков, сложенная с цифрой в разряде единиц, делится на 4. <br><br>
<b>Число делится на 5</b> тогда, когда последняя цифра делится на 5, т.е. если она 0 или 5. <br><br>
<b>Число делится на 6</b> тогда и только тогда, когда оно делится и на 2, и на 3, то есть если оно четное и сумма его цифр делится на 3. Другой признак делимости: число делится на 6 тогда и только тогда, когда учетверённое число десятков, сложенное с цифрой в разряде единиц, делится на 6. <br><br>
1) <b>Число делится на 7</b> тогда, когда утроенное число десятков, сложенное с цифрой в разряде единиц, делится на 7. <br>
2) <b>Число делится на 7</b> тогда и только тогда, когда модуль алгебраической суммы чисел, образующих нечётные группы по три цифры (начиная с единиц), взятых со знаком «+», и чётных со знаком «−» делится на 7. <br>
3) <b>Число делится на 7</b>, если разность между числом, состоящим из трёх последних цифр данного числа, и числом, образованным из оставшихся цифр данного числа (то есть без последних трёх цифр), делится на 7, то данное число делится на 7. <br><br>
<b>Число делится на 8</b>, когда три последние цифры составляют число, делящееся на 8. Трёхзначное число делится на 8 тогда и только тогда, когда цифра в разряде единиц, сложенная с удвоенной цифрой в разряде десятков и учетверённой цифрой в разряде сотен, делится на 8. <br><br>
<b>Число делится на 9</b>, когда сумма его цифр делится на 9. Например, сумма цифр числа 12345678 делится на 9, следовательно и само число делится на 9. <br><br>
<b>Число делится на 10</b> тогда и только тогда, когда оно оканчивается на ноль. <br><br>
1)  <b>Число делится на 11</b> тогда и только тогда, когда модуль разности между суммой цифр, занимающих нечётные позиции, и суммой цифр, занимающих чётные места, делится на 11. <br>
2) <b>Число делится на 11</b> тогда и только тогда, когда на 11 делится сумма чисел, образующих группы по две цифры (начиная с единиц). <br><br>
1) <b>Число делится на 13</b>, когда сумма числа десятков с учетверенной цифрой в разряде единиц делится на 13. <br>
2) <b>Число делится на 13</b>, когда сумма числа десятков с учетверенной цифрой в разряде единиц делится на 13. <br>
3) <b>Число делится на 13</b>, если разность между числом, состоящим из трёх последних цифр данного числа, и числом, образованным из оставшихся цифр данного числа (то есть без последних трёх цифр), делится на 13.]]> </string>

    <string name="sequences_1"><![CDATA[<b>Арифметическая прогрессия</b> – это числовая последовательность, каждый член которой равен предыдущему, сложенному с одним и тем же числом. Это число называется разностью арифметической прогрессии и обозначается d.\n
Формула арифметической прогрессии:]]></string>
    <string name="sequences_2">Сумма арифметической прогрессии:</string>
    <string name="sequences_3">Сумма первых n натуральных чисел выражается формулой:</string>
    <string name="sequences_4"><![CDATA[<b>Геометрическая прогрессия</b> - последовательность ненулевых чисел b1, b2, b3, в которой каждое последующее число начиная со второго, получается из предыдущего путем умножения его на некоторое ненулевое число q(называется знаменателем прогрессии)
Любой член геометрической прогрессии может быть вычислен по формуле:]]></string>
    <string name="sequnces_5"><![CDATA[Если b1,q > 0, прогрессия является возрастающей последовательностью, если 0&lt;q&lt;1, — убывающей последовательностью, а при q&lt;0 — знакочередующейся, при q=1 — стационарной.]]></string>
    <string name="sequence_6">Произведение первых n членов геометрической прогрессии можно рассчитать по формуле:</string>
    <string name="sequence_7">Сумма n первых членов геометрической прогрессии:</string>
    <string name="sequence_8">Последовательность Фибоначчи - числовая последовательность в которой, каждое последующее число равно сумме двух предыдущих(где F0 = 0, а F1 = 1). Задается рекуррентной формулой:</string>
    <string name="sequence_9">Формула Бине:</string>
    <string name="sequence_10">Для любого n справедливо:</string>
    <string name="sequence_11">Наибольший общий делитель двух чисел Фибоначчи равен числу Фибоначчи с индексом, равным наибольшему общему делителю индексов:</string>


    <string name="num_systems_text"><![CDATA[
<b>Система счисления(СС)</b> - это система записи чисел с помощью определенного набора цифр(которые зависят от основания системы). Самые распространенные системы счислений(основания): бинарная(2), восьмеричная(8), десятичная(10)б шестнадцатеричная(16).<br>
Минимальное основание - 2, Максимальное основание - 36.<br>
В числе с основанием n, не может быть цифры большей или равной n.<br>
Есть 2 способа перевода из десятичной системы счисления в другие:<br>
1) <b>Последовательное деление(процесс деления производится пока остаток от оставшегося числа не будет меньше основания числа)</b>
2) <b>Нахождение ближайшего числа степени основания, не превышающего текущего с последующим вычитанием.</b>
Пояснение ко второму способу:<br>
1)Возьмем число 326 и переведем его в троичную систему счислений.<br>
2) Ближайшее число не превышающее 326 - это 243(запоминаем, что это 3 в 5 степени).<br>
3) Вычитаем 326 - 243 = 83 - текущее число.<br>
4) Ближайшее число не превышающее 83 - это 81(запоминаем, что это 3 в 4 степени).<br>
5) Вычитаем 83 - 81 = 2 - текущее число.<br>
6) 2 не превышает степени основания.<br>
7)Следовательно, мы имеем единицы на пятой и четвертой позициях, а также число 2 на нулевой позиции, искомое число 110002 (нумерация позиций начинается справа налево начиная с 0).<br><br>
Перевод в десятичную систему счисления проводится согласно следующему алгоритму:<br>
1) Берется число с системой счисления n, проставляются позиции начиная справа налево от 0. (Переведем 110002 из троичной)<br>
2) Соответствующие цифры в числе умножаются на основание в степени позиции, все данные суммы складываются. (1*3^5 + 1*3^4 + 0*3^3 + 0*3^2 + 0*3^1 + 2*3^0 = 326 - искомое число)<br>
В системах счисления, у которых основание больше 10, кроме цифр используются латинские буквы, так например в шестнадцатеричной системе буквы соответствуют следующим числам в десятичной: A - 10, B - 11, C - 12, D - 13, E - 14, F - 15.



    ]]></string>

    <string name="num_kinds_text1">
        <![CDATA[
<b>Простое число</b> - натуральное число, имеющее ровно 2 различных делителя - единицу и себя .Натуральные числа, которые больше единицы и не являются простыми, называются составными.<br>
<b>Свойства:</b><br>
1) Если p — простое, и p делит ab, то p делит a или b.<br>
2) Если p - простое, а a - натуральное, то a^p - a кратно p.<br>
3) Натуральное p>1 является простым тогда и только тогда (p-1)! + 1 делится на p.<br>
4) Если n>1 - натуральное, то существует p - простое число, такое, что n>p>2n.<br>
5) Всякое простое число большее 3 можно представить в виде 6k - 1 или 6k + 1.<br>
6) Если p>3 - простое, то p^2 - 1 кратно 24.<br><br>
        <b>Полупростое число</b> - натуральное число представимое в виде произведения двух простых чисел.<br>
        <b>Свойства:</b><br>
1) Любое простое число является полупростым.<br>
2) Каждое достаточно большое нечетное натуральное число представимо в виде суммы трёх полупростых чисел.<br>

        ]]>
    </string>
    <string name="num_kinds_text2"><![CDATA[
<b>Дружественные числа</b> - пара различных натуральных чисел, для которых сумма всех собственных делителей первого числа равна второму числу и наоборот, сумма всех собственных делителей второго числа равна первому числу.<br>
<b>Свойства:</b><br>
Если для натурального числа n>1 все три числа:
    ]]></string>
    <string name="num_kinds_text3"><![CDATA[
являются простыми, то числа (2^n)pq и (2^n)r образуют пару дружественных чисел.<br><br>
<b>Недостаточные числа</b> - натуральные числа, сумма собственных делителей которых меньше самого числа.<br><br>
<b>Избыточные числа</b> - натуральные числа, сумма собственных делителей которых больше самого числа.<br><br>
<b>Полусовершенные числа</b> - натуральные числа, сумма всех или некоторых собственных делителей которых совпадает с самим этим числом.<br>
<b>Свойства:</b><br>
Всякое совершенное число является полусовершенным числом.<br>
Всякое совершенное число является полусовершенным числом.<br>
Любое число, кратное полусовершенному числу, также является полусовершенным.<br><br>
<b>Совершенные числа</b> - натуральные числа, сумма всех собственных делителей которых совпадает с этим числом.

    ]]></string>

    <string name="trig_text1">


        <![CDATA[

<b>Синус</b> — отношение противолежащего катета к гипотенузе.<br>
<b>Косинус</b> — отношение прилежащего катета к гипотенузе.<br>
<b>Тангенс</b> — отношение противолежащего катета к прилежащему.<br>
<b>Котангенс</b> — отношение прилежащего катета к противолежащему.<br>
<b>Секанс</b> — отношение гипотенузы к прилежащему катету.<br>
<b>Косеканс</b> — отношение гипотенузы к противолежащему катету.<br>
<b>Свойства синуса:</b><br>
Область определения от -1 до 1.<br>
Синус является нечетной функцией (sin(-x) = - sin(x)).<br>
Является периодической функцией.<br>
<b>Свойства косинуса:</b><br>
Область определения от -1 до 1.<br>
Косинус является четной функцией (cos(-x) = cos(x)).<br>
Является периодической функцией.<br>
<b>Свойства тангенса:</b><br>
Область определения - вся числовая ось<br>
Тангенс является нечетной функцией (tg(-x) = - tg(x)).<br>
Является периодической функцией.<br>
<b>Свойство котангенса:</b><br>
Область определения - вся числовая ось.<br>
Котангенс является нечетной функцией (ctg(-x) = - ctg(x)).<br>
Является периодической функцией.<br>
<b>Основные тождества и формулы:</b>
        ]]>


    </string>
    <string name="trig_text2"><![CDATA[
<b>Теорема синусов.</b><br>
	Стороны треугольника пропорциональны синусам противолежащих углов (R - радиус описанной вокруг треугольника окружности):

    ]]></string>
    <string name="trig_text3"><![CDATA[
<b>Теорема косинусов.</b><br>
Квадрат стороны треугольника равен сумме квадратов двух других сторон минус удвоенное произведение этих сторон на косинус угла между ними:

    ]]></string>
    <string name="trig_text4"><![CDATA[
<b>Формула Эйлера( где e - число Эйлера, i - мнимая единица):</b>
    ]]></string>
    <string name="trig_text5"><![CDATA[
<b>Прочие свойства:</b>
    ]]></string>

    <string name="log_text1">
        <![CDATA[
<b>Логарифм</b> числа b по основанию a, определяется как показатель степени в которую надо возвести основание a, чтобы получить число b.
        ]]>
    </string>
    <string name="log_text2">Вещественный логарифм числа b по основанию a имеет смысл при a > 0, a не равным 1, b > 0. Логарифм с основанием равным числу Эйлера обозначается - ln(a).</string>
    <string name="log_text3"><![CDATA[
<b>Свойства:</b>
    ]]></string>

    <string name="power_text1"><![CDATA[<b>Основные свойства степени:</b>]]></string>
    <string name="power_text2"><![CDATA[<b>Целая степень:</b>]]></string>
    <string name="power_text3"><![CDATA[<b>Вещественная степень:</b>]]></string>

    <string name="deriv_text1"><![CDATA[
<b>Производная функции</b> - определяется как предел отношения приращения функции к приращению ее аргумента при стремлении приращения аргумента к нулю, если такой предел существует.
    ]]></string>
    <string name="deriv_text2"><![CDATA[
<b>Производные основных функций:</b>
    ]]></string>
    <string name="deriv_text3"><![CDATA[

<b>Геометрический смысл производной</b> - тангенс угла наклона касательной прямой к функции.<br>
<b>Физический смысл производной</b> - скорость изменения функции.

    ]]></string>
    <string name="deriv_text4"><![CDATA[
<b>Правила дифференцирования:</b>
    ]]></string>
    <string name="deriv_text5"><![CDATA[
<b>Если функция задается параметрически,</b>
    ]]></string>
    <string name="deriv_text6"><![CDATA[
<b>то:</b>
    ]]></string>

    <string name="integral_text1"><![CDATA[
<b>Интеграл</b> - одно из важнейших понятий математического анализа. Требуется для решения обширного класса задача ( в том числе нахождение площади под кривой). Упрощенно интеграл можно представить как аналог суммы для бесконечного числа бесконечно малых слагаемых.
    ]]></string>
    <string name="integral_text2"><![CDATA[
<b>Свойства:</b>
    ]]></string>
    <string name="integral_text3">Интеграл от единицы по промежутку [a,b] равен длине этого промежутка:</string>
    <string name="integral_text4">Постоянный множитель можно выносить за знак интеграла:</string>
    <string name="integral_text5">Интеграл от алгебраической суммы интегрируемых функций равен алгебраической сумме интегралов:</string>
    <string name="integral_text6">При перестановке местами пределов интегрирования интеграл меняет свой знак на противоположный:</string>
    <string name="integral_text7">Если функция  f(x)  интегрируема на каждом из промежутков  [a,b],  [a,c]  и  [c,b], то</string>
    <string name="integral_text7_">Произведение внутри интеграла: </string>
    <string name="integral_text8"><![CDATA[
<b>Интегралы основных функций:</b>
    ]]></string>

    <string name="prob_text1"><![CDATA[
<b>Формула количества перестановок:</b>
    ]]></string>
    <string name="prob_text2"><![CDATA[
Примерный вопрос:<br>
Сколькими способами можно переставить n объектов?<br>
    ]]></string>
    <string name="prob_text3"><![CDATA[
<b>Формула размещения:</b>
    ]]></string>
    <string name="prob_text4"><![CDATA[
Примерный вопрос:<br>
Сколькими способами можно выбрать m объектов (из n объектов) и в каждой выборке переставить их местами?<br>
    ]]></string>
    <string name="prob_text5"><![CDATA[
<b>Формула сочетания:</b>
    ]]></string>
    <string name="prob_text6"><![CDATA[
Примерный вопрос:<br>
Сколькими способами можно выбрать m объектов из n ?<br>
    ]]></string>
    <string name="prob_text7"><![CDATA[
<b>Формула сочетаний с повторениями:</b>
    ]]></string>
    <string name="prob_text8"><![CDATA[
Примерный вопрос:<br>
Для выбора предложено n множеств, каждое из которых состоит из одинаковых объектов. Сколькими способами можно выбрать m объектов?<br>
    ]]></string>
    <string name="prob_text9"><![CDATA[
<b>Формула перестановок с повторениями:</b>
    ]]></string>
    <string name="prob_text10"><![CDATA[
Примерный вопрос:<br>
Количество способов, которыми можно переставить n объектов, среди которых 1-й объект повторяется k1 раз, 2-й объект повторяется k2 раз и так далее?<br>
    ]]></string>
    <string name="prob_text11"><![CDATA[
    <b>Формула количества размещений с повторениями:</b>
    ]]></string>
    <string name="prob_text12"><![CDATA[
Примерный вопрос:<br>
Дано множество, состоящее из n объектов, при этом любой объект можно выбирать неоднократно. Сколькими способами можно выбрать m объектов, если важен порядок их расположения в выборке?<br>

    ]]></string>

    <!--CongratulationStrings-->
    <string name="congrat_send">Отправить</string>
    <string name="congrat">Поздравляю! Вы лучший! Пожалуйста, введите вашу почту и нажмите «Отправить». В течение недели с вами свяжутся (по этой почте) для получения приза.</string>



    <!--FullVersion activity-->
    <string name="fv_no_ads">Без рекламы</string>
    <string name="fv_full_access">Полный доступ</string>
    <string name="fv_upgrade">Обновить до полной версии</string>

    <!--Lottery Fragment-->
    <string name="lottery_header">Ежедневный вызов</string>
    <string name="lottery_title">Попробуй угадать число от 100 до 1000000 и получи $ 15</string>
    <string name="lottery_button">Угадать</string>
    <string name="lottery_dialog_error">Ошибка</string>
</resources>